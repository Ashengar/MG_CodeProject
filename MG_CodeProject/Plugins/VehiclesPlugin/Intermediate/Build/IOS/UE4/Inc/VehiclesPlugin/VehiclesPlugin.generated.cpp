// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/VehiclesPluginPrivatePCH.h"
#include "GeneratedCppIncludes.h"
#include "VehiclesPlugin.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1VehiclesPlugin() {}
FName VEHICLESPLUGIN_ServerUpdateTankState = FName(TEXT("ServerUpdateTankState"));
class UScriptStruct* FTankTransmissionData::StaticStruct()
{
	extern VEHICLESPLUGIN_API class UPackage* Z_Construct_UPackage__Script_VehiclesPlugin();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern VEHICLESPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FTankTransmissionData();
		extern VEHICLESPLUGIN_API uint32 Get_Z_Construct_UScriptStruct_FTankTransmissionData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTankTransmissionData, Z_Construct_UPackage__Script_VehiclesPlugin(), TEXT("TankTransmissionData"), sizeof(FTankTransmissionData), Get_Z_Construct_UScriptStruct_FTankTransmissionData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTankTransmissionData(FTankTransmissionData::StaticStruct, TEXT("/Script/VehiclesPlugin"), TEXT("TankTransmissionData"), false, nullptr, nullptr);
static struct FScriptStruct_VehiclesPlugin_StaticRegisterNativesFTankTransmissionData
{
	FScriptStruct_VehiclesPlugin_StaticRegisterNativesFTankTransmissionData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TankTransmissionData")),new UScriptStruct::TCppStructOps<FTankTransmissionData>);
	}
} ScriptStruct_VehiclesPlugin_StaticRegisterNativesFTankTransmissionData;
class UScriptStruct* FTankGearData::StaticStruct()
{
	extern VEHICLESPLUGIN_API class UPackage* Z_Construct_UPackage__Script_VehiclesPlugin();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern VEHICLESPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FTankGearData();
		extern VEHICLESPLUGIN_API uint32 Get_Z_Construct_UScriptStruct_FTankGearData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTankGearData, Z_Construct_UPackage__Script_VehiclesPlugin(), TEXT("TankGearData"), sizeof(FTankGearData), Get_Z_Construct_UScriptStruct_FTankGearData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTankGearData(FTankGearData::StaticStruct, TEXT("/Script/VehiclesPlugin"), TEXT("TankGearData"), false, nullptr, nullptr);
static struct FScriptStruct_VehiclesPlugin_StaticRegisterNativesFTankGearData
{
	FScriptStruct_VehiclesPlugin_StaticRegisterNativesFTankGearData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TankGearData")),new UScriptStruct::TCppStructOps<FTankGearData>);
	}
} ScriptStruct_VehiclesPlugin_StaticRegisterNativesFTankGearData;
class UScriptStruct* FTankEngineData::StaticStruct()
{
	extern VEHICLESPLUGIN_API class UPackage* Z_Construct_UPackage__Script_VehiclesPlugin();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern VEHICLESPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FTankEngineData();
		extern VEHICLESPLUGIN_API uint32 Get_Z_Construct_UScriptStruct_FTankEngineData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTankEngineData, Z_Construct_UPackage__Script_VehiclesPlugin(), TEXT("TankEngineData"), sizeof(FTankEngineData), Get_Z_Construct_UScriptStruct_FTankEngineData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTankEngineData(FTankEngineData::StaticStruct, TEXT("/Script/VehiclesPlugin"), TEXT("TankEngineData"), false, nullptr, nullptr);
static struct FScriptStruct_VehiclesPlugin_StaticRegisterNativesFTankEngineData
{
	FScriptStruct_VehiclesPlugin_StaticRegisterNativesFTankEngineData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TankEngineData")),new UScriptStruct::TCppStructOps<FTankEngineData>);
	}
} ScriptStruct_VehiclesPlugin_StaticRegisterNativesFTankEngineData;
class UScriptStruct* FReplicatedTankState::StaticStruct()
{
	extern VEHICLESPLUGIN_API class UPackage* Z_Construct_UPackage__Script_VehiclesPlugin();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern VEHICLESPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FReplicatedTankState();
		extern VEHICLESPLUGIN_API uint32 Get_Z_Construct_UScriptStruct_FReplicatedTankState_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FReplicatedTankState, Z_Construct_UPackage__Script_VehiclesPlugin(), TEXT("ReplicatedTankState"), sizeof(FReplicatedTankState), Get_Z_Construct_UScriptStruct_FReplicatedTankState_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FReplicatedTankState(FReplicatedTankState::StaticStruct, TEXT("/Script/VehiclesPlugin"), TEXT("ReplicatedTankState"), false, nullptr, nullptr);
static struct FScriptStruct_VehiclesPlugin_StaticRegisterNativesFReplicatedTankState
{
	FScriptStruct_VehiclesPlugin_StaticRegisterNativesFReplicatedTankState()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ReplicatedTankState")),new UScriptStruct::TCppStructOps<FReplicatedTankState>);
	}
} ScriptStruct_VehiclesPlugin_StaticRegisterNativesFReplicatedTankState;
	void UWheeledVehicleMovementComponentTank::ServerUpdateTankState(float InSteeringInputLeft, float InSteeringInputRight, float InBrakeInputLeft, float InBrakeInputRight)
	{
		WheeledVehicleMovementComponentTank_eventServerUpdateTankState_Parms Parms;
		Parms.InSteeringInputLeft=InSteeringInputLeft;
		Parms.InSteeringInputRight=InSteeringInputRight;
		Parms.InBrakeInputLeft=InBrakeInputLeft;
		Parms.InBrakeInputRight=InBrakeInputRight;
		ProcessEvent(FindFunctionChecked(VEHICLESPLUGIN_ServerUpdateTankState),&Parms);
	}
	void UWheeledVehicleMovementComponentTank::StaticRegisterNativesUWheeledVehicleMovementComponentTank()
	{
		FNativeFunctionRegistrar::RegisterFunction(UWheeledVehicleMovementComponentTank::StaticClass(), "ServerUpdateTankState",(Native)&UWheeledVehicleMovementComponentTank::execServerUpdateTankState);
		FNativeFunctionRegistrar::RegisterFunction(UWheeledVehicleMovementComponentTank::StaticClass(), "SetBrakeLeftInput",(Native)&UWheeledVehicleMovementComponentTank::execSetBrakeLeftInput);
		FNativeFunctionRegistrar::RegisterFunction(UWheeledVehicleMovementComponentTank::StaticClass(), "SetBrakeRightInput",(Native)&UWheeledVehicleMovementComponentTank::execSetBrakeRightInput);
		FNativeFunctionRegistrar::RegisterFunction(UWheeledVehicleMovementComponentTank::StaticClass(), "SetSteeringLeftInput",(Native)&UWheeledVehicleMovementComponentTank::execSetSteeringLeftInput);
		FNativeFunctionRegistrar::RegisterFunction(UWheeledVehicleMovementComponentTank::StaticClass(), "SetSteeringRightInput",(Native)&UWheeledVehicleMovementComponentTank::execSetSteeringRightInput);
	}
	IMPLEMENT_CLASS(UWheeledVehicleMovementComponentTank, 1347445717);
	void ATankVehicle::StaticRegisterNativesATankVehicle()
	{
	}
	IMPLEMENT_CLASS(ATankVehicle, 175144060);
	void UWheeledVehicleMovementComponent10W::StaticRegisterNativesUWheeledVehicleMovementComponent10W()
	{
	}
	IMPLEMENT_CLASS(UWheeledVehicleMovementComponent10W, 1743306424);
	void AWheeledVehicle10W::StaticRegisterNativesAWheeledVehicle10W()
	{
	}
	IMPLEMENT_CLASS(AWheeledVehicle10W, 2235179465);
	void UWheeledVehicleMovementComponent12W::StaticRegisterNativesUWheeledVehicleMovementComponent12W()
	{
	}
	IMPLEMENT_CLASS(UWheeledVehicleMovementComponent12W, 2724340402);
	void AWheeledVehicle12W::StaticRegisterNativesAWheeledVehicle12W()
	{
	}
	IMPLEMENT_CLASS(AWheeledVehicle12W, 2816804047);
	void UWheeledVehicleMovementComponent14W::StaticRegisterNativesUWheeledVehicleMovementComponent14W()
	{
	}
	IMPLEMENT_CLASS(UWheeledVehicleMovementComponent14W, 3896285979);
	void AWheeledVehicle14W::StaticRegisterNativesAWheeledVehicle14W()
	{
	}
	IMPLEMENT_CLASS(AWheeledVehicle14W, 3229903813);
	void UWheeledVehicleMovementComponent16W::StaticRegisterNativesUWheeledVehicleMovementComponent16W()
	{
	}
	IMPLEMENT_CLASS(UWheeledVehicleMovementComponent16W, 766904081);
	void AWheeledVehicle16W::StaticRegisterNativesAWheeledVehicle16W()
	{
	}
	IMPLEMENT_CLASS(AWheeledVehicle16W, 3797634755);
	void UWheeledVehicleMovementComponent6W::StaticRegisterNativesUWheeledVehicleMovementComponent6W()
	{
	}
	IMPLEMENT_CLASS(UWheeledVehicleMovementComponent6W, 2495501006);
	void AWheeledVehicle6W::StaticRegisterNativesAWheeledVehicle6W()
	{
	}
	IMPLEMENT_CLASS(AWheeledVehicle6W, 896204892);
	void UWheeledVehicleMovementComponent8W::StaticRegisterNativesUWheeledVehicleMovementComponent8W()
	{
	}
	IMPLEMENT_CLASS(UWheeledVehicleMovementComponent8W, 3196882973);
	void AWheeledVehicle8W::StaticRegisterNativesAWheeledVehicle8W()
	{
	}
	IMPLEMENT_CLASS(AWheeledVehicle8W, 3032664843);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRuntimeFloatCurve();
	ENGINE_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVehicleInputRate();
	ENGINE_API class UClass* Z_Construct_UClass_AWheeledVehicle();
	ENGINE_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent4W();

	VEHICLESPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FTankTransmissionData();
	VEHICLESPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FTankGearData();
	VEHICLESPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FTankEngineData();
	VEHICLESPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FReplicatedTankState();
	VEHICLESPLUGIN_API class UFunction* Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_ServerUpdateTankState();
	VEHICLESPLUGIN_API class UFunction* Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetBrakeLeftInput();
	VEHICLESPLUGIN_API class UFunction* Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetBrakeRightInput();
	VEHICLESPLUGIN_API class UFunction* Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetSteeringLeftInput();
	VEHICLESPLUGIN_API class UFunction* Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetSteeringRightInput();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponentTank_NoRegister();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponentTank();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_ATankVehicle_NoRegister();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_ATankVehicle();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent10W_NoRegister();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent10W();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_AWheeledVehicle10W_NoRegister();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_AWheeledVehicle10W();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent12W_NoRegister();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent12W();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_AWheeledVehicle12W_NoRegister();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_AWheeledVehicle12W();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent14W_NoRegister();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent14W();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_AWheeledVehicle14W_NoRegister();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_AWheeledVehicle14W();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent16W_NoRegister();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent16W();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_AWheeledVehicle16W_NoRegister();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_AWheeledVehicle16W();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent6W_NoRegister();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent6W();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_AWheeledVehicle6W_NoRegister();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_AWheeledVehicle6W();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent8W_NoRegister();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent8W();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_AWheeledVehicle8W_NoRegister();
	VEHICLESPLUGIN_API class UClass* Z_Construct_UClass_AWheeledVehicle8W();
	VEHICLESPLUGIN_API class UPackage* Z_Construct_UPackage__Script_VehiclesPlugin();
	UScriptStruct* Z_Construct_UScriptStruct_FTankTransmissionData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_VehiclesPlugin();
		extern uint32 Get_Z_Construct_UScriptStruct_FTankTransmissionData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("TankTransmissionData"), sizeof(FTankTransmissionData), Get_Z_Construct_UScriptStruct_FTankTransmissionData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TankTransmissionData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTankTransmissionData>, EStructFlags(0x00000001));
			UProperty* NewProp_ClutchStrength = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ClutchStrength"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ClutchStrength, FTankTransmissionData), 0x0010040000000001);
			UProperty* NewProp_NeutralGearUpRatio = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NeutralGearUpRatio"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NeutralGearUpRatio, FTankTransmissionData), 0x0010040000000001);
			UProperty* NewProp_ReverseGearRatio = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ReverseGearRatio"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReverseGearRatio, FTankTransmissionData), 0x0010040000000001);
			UProperty* NewProp_ForwardGears = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ForwardGears"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ForwardGears, FTankTransmissionData), 0x0010040000000001);
			UProperty* NewProp_ForwardGears_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ForwardGears, TEXT("ForwardGears"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FTankGearData());
			UProperty* NewProp_FinalRatio = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FinalRatio"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(FinalRatio, FTankTransmissionData), 0x0010040000000001);
			UProperty* NewProp_GearAutoBoxLatency = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GearAutoBoxLatency"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(GearAutoBoxLatency, FTankTransmissionData), 0x0010000000000001);
			UProperty* NewProp_GearSwitchTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GearSwitchTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(GearSwitchTime, FTankTransmissionData), 0x0010000000000001);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseGearAutoBox, FTankTransmissionData, bool);
			UProperty* NewProp_bUseGearAutoBox = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseGearAutoBox"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseGearAutoBox, FTankTransmissionData), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bUseGearAutoBox, FTankTransmissionData), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_ClutchStrength, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_ClutchStrength, TEXT("ClampMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_ClutchStrength, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_ClutchStrength, TEXT("ToolTip"), TEXT("Strength of clutch (Kgm^2/s)"));
			MetaData->SetValue(NewProp_ClutchStrength, TEXT("UIMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_NeutralGearUpRatio, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_NeutralGearUpRatio, TEXT("ClampMax"), TEXT("1.0"));
			MetaData->SetValue(NewProp_NeutralGearUpRatio, TEXT("ClampMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_NeutralGearUpRatio, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_NeutralGearUpRatio, TEXT("ToolTip"), TEXT("Value of engineRevs/maxEngineRevs that is high enough to increment gear"));
			MetaData->SetValue(NewProp_NeutralGearUpRatio, TEXT("UIMax"), TEXT("1.0"));
			MetaData->SetValue(NewProp_NeutralGearUpRatio, TEXT("UIMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_ReverseGearRatio, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_ReverseGearRatio, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_ReverseGearRatio, TEXT("ToolTip"), TEXT("Reverse gear ratio"));
			MetaData->SetValue(NewProp_ForwardGears, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_ForwardGears, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_ForwardGears, TEXT("ToolTip"), TEXT("Forward gear ratios (up to 30)"));
			MetaData->SetValue(NewProp_FinalRatio, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_FinalRatio, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_FinalRatio, TEXT("ToolTip"), TEXT("The final gear ratio multiplies the transmission gear ratios."));
			MetaData->SetValue(NewProp_GearAutoBoxLatency, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_GearAutoBoxLatency, TEXT("ClampMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_GearAutoBoxLatency, TEXT("editcondition"), TEXT("bUseGearAutoBox"));
			MetaData->SetValue(NewProp_GearAutoBoxLatency, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_GearAutoBoxLatency, TEXT("ToolTip"), TEXT("Minimum time it takes the automatic transmission to initiate a gear change (seconds)"));
			MetaData->SetValue(NewProp_GearAutoBoxLatency, TEXT("UIMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_GearSwitchTime, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_GearSwitchTime, TEXT("ClampMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_GearSwitchTime, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_GearSwitchTime, TEXT("ToolTip"), TEXT("Time it takes to switch gears (seconds)"));
			MetaData->SetValue(NewProp_GearSwitchTime, TEXT("UIMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_bUseGearAutoBox, TEXT("Category"), TEXT("TankSetup"));
			MetaData->SetValue(NewProp_bUseGearAutoBox, TEXT("DisplayName"), TEXT("Authomatic Transmission"));
			MetaData->SetValue(NewProp_bUseGearAutoBox, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_bUseGearAutoBox, TEXT("ToolTip"), TEXT("Whether to use automatic transmission"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTankTransmissionData_CRC() { return 3253621800U; }
	UScriptStruct* Z_Construct_UScriptStruct_FTankGearData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_VehiclesPlugin();
		extern uint32 Get_Z_Construct_UScriptStruct_FTankGearData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("TankGearData"), sizeof(FTankGearData), Get_Z_Construct_UScriptStruct_FTankGearData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TankGearData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTankGearData>, EStructFlags(0x00000001));
			UProperty* NewProp_UpRatio = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UpRatio"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(UpRatio, FTankGearData), 0x0010000000000001);
			UProperty* NewProp_DownRatio = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DownRatio"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DownRatio, FTankGearData), 0x0010000000000001);
			UProperty* NewProp_Ratio = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Ratio"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Ratio, FTankGearData), 0x0010000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_UpRatio, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_UpRatio, TEXT("ClampMax"), TEXT("1.0"));
			MetaData->SetValue(NewProp_UpRatio, TEXT("ClampMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_UpRatio, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_UpRatio, TEXT("ToolTip"), TEXT("Value of engineRevs/maxEngineRevs that is high enough to gear up"));
			MetaData->SetValue(NewProp_UpRatio, TEXT("UIMax"), TEXT("1.0"));
			MetaData->SetValue(NewProp_UpRatio, TEXT("UIMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_DownRatio, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_DownRatio, TEXT("ClampMax"), TEXT("1.0"));
			MetaData->SetValue(NewProp_DownRatio, TEXT("ClampMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_DownRatio, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_DownRatio, TEXT("ToolTip"), TEXT("Value of engineRevs/maxEngineRevs that is low enough to gear down"));
			MetaData->SetValue(NewProp_DownRatio, TEXT("UIMax"), TEXT("1.0"));
			MetaData->SetValue(NewProp_DownRatio, TEXT("UIMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_Ratio, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_Ratio, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_Ratio, TEXT("ToolTip"), TEXT("Determines the amount of torque multiplication"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTankGearData_CRC() { return 1231645080U; }
	UScriptStruct* Z_Construct_UScriptStruct_FTankEngineData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_VehiclesPlugin();
		extern uint32 Get_Z_Construct_UScriptStruct_FTankEngineData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("TankEngineData"), sizeof(FTankEngineData), Get_Z_Construct_UScriptStruct_FTankEngineData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TankEngineData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTankEngineData>, EStructFlags(0x00000001));
			UProperty* NewProp_DampingRateZeroThrottleClutchDisengaged = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DampingRateZeroThrottleClutchDisengaged"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DampingRateZeroThrottleClutchDisengaged, FTankEngineData), 0x0010040000000001);
			UProperty* NewProp_DampingRateZeroThrottleClutchEngaged = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DampingRateZeroThrottleClutchEngaged"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DampingRateZeroThrottleClutchEngaged, FTankEngineData), 0x0010040000000001);
			UProperty* NewProp_DampingRateFullThrottle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DampingRateFullThrottle"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DampingRateFullThrottle, FTankEngineData), 0x0010040000000001);
			UProperty* NewProp_MOI = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MOI"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MOI, FTankEngineData), 0x0010000000000001);
			UProperty* NewProp_MaxRPM = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MaxRPM"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxRPM, FTankEngineData), 0x0010000000000001);
			UProperty* NewProp_TorqueCurve = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TorqueCurve"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TorqueCurve, FTankEngineData), 0x0010000000000001, Z_Construct_UScriptStruct_FRuntimeFloatCurve());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Some Parts of code are duplicating UWheeledVehicleMovementComponent4W.\nThis was made because UWheeledVehicleMovementComponentTank is not a children of UWheeledVehicleMovementComponent4W."));
			MetaData->SetValue(NewProp_DampingRateZeroThrottleClutchDisengaged, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_DampingRateZeroThrottleClutchDisengaged, TEXT("ClampMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_DampingRateZeroThrottleClutchDisengaged, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_DampingRateZeroThrottleClutchDisengaged, TEXT("ToolTip"), TEXT("Damping rate of engine in at zero throttle when the clutch is disengaged (in neutral gear) (Kgm^2/s)"));
			MetaData->SetValue(NewProp_DampingRateZeroThrottleClutchDisengaged, TEXT("UIMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_DampingRateZeroThrottleClutchEngaged, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_DampingRateZeroThrottleClutchEngaged, TEXT("ClampMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_DampingRateZeroThrottleClutchEngaged, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_DampingRateZeroThrottleClutchEngaged, TEXT("ToolTip"), TEXT("Damping rate of engine in at zero throttle when the clutch is engaged (Kgm^2/s)"));
			MetaData->SetValue(NewProp_DampingRateZeroThrottleClutchEngaged, TEXT("UIMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_DampingRateFullThrottle, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_DampingRateFullThrottle, TEXT("ClampMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_DampingRateFullThrottle, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_DampingRateFullThrottle, TEXT("ToolTip"), TEXT("Damping rate of engine when full throttle is applied (Kgm^2/s)"));
			MetaData->SetValue(NewProp_DampingRateFullThrottle, TEXT("UIMin"), TEXT("0.0"));
			MetaData->SetValue(NewProp_MOI, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_MOI, TEXT("ClampMin"), TEXT("0.01"));
			MetaData->SetValue(NewProp_MOI, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_MOI, TEXT("ToolTip"), TEXT("Moment of inertia of the engine around the axis of rotation (Kgm^2)."));
			MetaData->SetValue(NewProp_MOI, TEXT("UIMin"), TEXT("0.01"));
			MetaData->SetValue(NewProp_MaxRPM, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_MaxRPM, TEXT("ClampMin"), TEXT("0.01"));
			MetaData->SetValue(NewProp_MaxRPM, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_MaxRPM, TEXT("ToolTip"), TEXT("Maximum revolutions per minute of the engine"));
			MetaData->SetValue(NewProp_MaxRPM, TEXT("UIMin"), TEXT("0.01"));
			MetaData->SetValue(NewProp_TorqueCurve, TEXT("Category"), TEXT("Setup"));
			MetaData->SetValue(NewProp_TorqueCurve, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_TorqueCurve, TEXT("ToolTip"), TEXT("Torque (Nm) at a given RPM"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTankEngineData_CRC() { return 2085559982U; }
	UScriptStruct* Z_Construct_UScriptStruct_FReplicatedTankState()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_VehiclesPlugin();
		extern uint32 Get_Z_Construct_UScriptStruct_FReplicatedTankState_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("ReplicatedTankState"), sizeof(FReplicatedTankState), Get_Z_Construct_UScriptStruct_FReplicatedTankState_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReplicatedTankState"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FReplicatedTankState>, EStructFlags(0x00000001));
			UProperty* NewProp_BrakeInputRight = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BrakeInputRight"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BrakeInputRight, FReplicatedTankState), 0x0010000000000000);
			UProperty* NewProp_BrakeInputLeft = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BrakeInputLeft"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BrakeInputLeft, FReplicatedTankState), 0x0010000000000000);
			UProperty* NewProp_SteeringInputRight = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SteeringInputRight"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SteeringInputRight, FReplicatedTankState), 0x0010000000000000);
			UProperty* NewProp_SteeringInputLeft = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SteeringInputLeft"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SteeringInputLeft, FReplicatedTankState), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Struct of variables that replicates movement."));
			MetaData->SetValue(NewProp_BrakeInputRight, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_BrakeInputLeft, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_SteeringInputRight, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(NewProp_SteeringInputLeft, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FReplicatedTankState_CRC() { return 2501780024U; }
	UFunction* Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_ServerUpdateTankState()
	{
		UObject* Outer=Z_Construct_UClass_UWheeledVehicleMovementComponentTank();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerUpdateTankState"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535, sizeof(WheeledVehicleMovementComponentTank_eventServerUpdateTankState_Parms));
			UProperty* NewProp_InBrakeInputRight = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InBrakeInputRight"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(InBrakeInputRight, WheeledVehicleMovementComponentTank_eventServerUpdateTankState_Parms), 0x0010000000000080);
			UProperty* NewProp_InBrakeInputLeft = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InBrakeInputLeft"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(InBrakeInputLeft, WheeledVehicleMovementComponentTank_eventServerUpdateTankState_Parms), 0x0010000000000080);
			UProperty* NewProp_InSteeringInputRight = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InSteeringInputRight"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(InSteeringInputRight, WheeledVehicleMovementComponentTank_eventServerUpdateTankState_Parms), 0x0010000000000080);
			UProperty* NewProp_InSteeringInputLeft = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InSteeringInputLeft"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(InSteeringInputLeft, WheeledVehicleMovementComponentTank_eventServerUpdateTankState_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetBrakeLeftInput()
	{
		struct WheeledVehicleMovementComponentTank_eventSetBrakeLeftInput_Parms
		{
			float bNewBrakeLeft;
		};
		UObject* Outer=Z_Construct_UClass_UWheeledVehicleMovementComponentTank();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBrakeLeftInput"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(WheeledVehicleMovementComponentTank_eventSetBrakeLeftInput_Parms));
			UProperty* NewProp_bNewBrakeLeft = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bNewBrakeLeft"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(bNewBrakeLeft, WheeledVehicleMovementComponentTank_eventSetBrakeLeftInput_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Components|TankMovement"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Calls Break On Right Caterpillar"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetBrakeRightInput()
	{
		struct WheeledVehicleMovementComponentTank_eventSetBrakeRightInput_Parms
		{
			float bNewBrakeRight;
		};
		UObject* Outer=Z_Construct_UClass_UWheeledVehicleMovementComponentTank();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBrakeRightInput"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(WheeledVehicleMovementComponentTank_eventSetBrakeRightInput_Parms));
			UProperty* NewProp_bNewBrakeRight = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bNewBrakeRight"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(bNewBrakeRight, WheeledVehicleMovementComponentTank_eventSetBrakeRightInput_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Components|TankMovement"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Calls Break On Left Caterpillar"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetSteeringLeftInput()
	{
		struct WheeledVehicleMovementComponentTank_eventSetSteeringLeftInput_Parms
		{
			float SteeringLeft;
		};
		UObject* Outer=Z_Construct_UClass_UWheeledVehicleMovementComponentTank();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSteeringLeftInput"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(WheeledVehicleMovementComponentTank_eventSetSteeringLeftInput_Parms));
			UProperty* NewProp_SteeringLeft = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SteeringLeft"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SteeringLeft, WheeledVehicleMovementComponentTank_eventSetSteeringLeftInput_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Components|TankMovement"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Calls Torque On Left Caterpillar"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetSteeringRightInput()
	{
		struct WheeledVehicleMovementComponentTank_eventSetSteeringRightInput_Parms
		{
			float SteeringRight;
		};
		UObject* Outer=Z_Construct_UClass_UWheeledVehicleMovementComponentTank();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSteeringRightInput"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(WheeledVehicleMovementComponentTank_eventSetSteeringRightInput_Parms));
			UProperty* NewProp_SteeringRight = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SteeringRight"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SteeringRight, WheeledVehicleMovementComponentTank_eventSetSteeringRightInput_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Components|TankMovement"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Calls Torque On Right Caterpillar"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UWheeledVehicleMovementComponentTank_NoRegister()
	{
		return UWheeledVehicleMovementComponentTank::StaticClass();
	}
	UClass* Z_Construct_UClass_UWheeledVehicleMovementComponentTank()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UWheeledVehicleMovementComponent();
			Z_Construct_UPackage__Script_VehiclesPlugin();
			OuterClass = UWheeledVehicleMovementComponentTank::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_ServerUpdateTankState());
				OuterClass->LinkChild(Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetBrakeLeftInput());
				OuterClass->LinkChild(Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetBrakeRightInput());
				OuterClass->LinkChild(Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetSteeringLeftInput());
				OuterClass->LinkChild(Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetSteeringRightInput());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_NumRollers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumRollers"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NumRollers, UWheeledVehicleMovementComponentTank), 0x0010000000000001);
				UProperty* NewProp_RepTankState = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RepTankState"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RepTankState, UWheeledVehicleMovementComponentTank), 0x0020080000002020, Z_Construct_UScriptStruct_FReplicatedTankState());
				UProperty* NewProp_BrakeRightRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BrakeRightRate"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(BrakeRightRate, UWheeledVehicleMovementComponentTank), 0x00200c0000000001, Z_Construct_UScriptStruct_FVehicleInputRate());
				UProperty* NewProp_BrakeLeftRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BrakeLeftRate"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(BrakeLeftRate, UWheeledVehicleMovementComponentTank), 0x00200c0000000001, Z_Construct_UScriptStruct_FVehicleInputRate());
				UProperty* NewProp_SteeringRightRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SteeringRightRate"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SteeringRightRate, UWheeledVehicleMovementComponentTank), 0x00200c0000000001, Z_Construct_UScriptStruct_FVehicleInputRate());
				UProperty* NewProp_SteeringLeftRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SteeringLeftRate"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SteeringLeftRate, UWheeledVehicleMovementComponentTank), 0x00200c0000000001, Z_Construct_UScriptStruct_FVehicleInputRate());
				UProperty* NewProp_IdleBrakeInputRight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IdleBrakeInputRight"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(IdleBrakeInputRight, UWheeledVehicleMovementComponentTank), 0x0020080000000001);
				UProperty* NewProp_IdleBrakeInputLeft = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IdleBrakeInputLeft"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(IdleBrakeInputLeft, UWheeledVehicleMovementComponentTank), 0x0020080000000001);
				UProperty* NewProp_bRawBrakeLeftInput = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bRawBrakeLeftInput"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(bRawBrakeLeftInput, UWheeledVehicleMovementComponentTank), 0x0020080000002000);
				UProperty* NewProp_bRawBrakeRightInput = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bRawBrakeRightInput"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(bRawBrakeRightInput, UWheeledVehicleMovementComponentTank), 0x0020080000002000);
				UProperty* NewProp_RawSteeringRightInput = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RawSteeringRightInput"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(RawSteeringRightInput, UWheeledVehicleMovementComponentTank), 0x0020080000002000);
				UProperty* NewProp_RawSteeringLeftInput = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RawSteeringLeftInput"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(RawSteeringLeftInput, UWheeledVehicleMovementComponentTank), 0x0020080000002000);
				UProperty* NewProp_BrakeRightInput = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BrakeRightInput"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BrakeRightInput, UWheeledVehicleMovementComponentTank), 0x0020080000002000);
				UProperty* NewProp_BrakeLeftInput = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BrakeLeftInput"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BrakeLeftInput, UWheeledVehicleMovementComponentTank), 0x0020080000002000);
				UProperty* NewProp_SteeringRightInput = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SteeringRightInput"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SteeringRightInput, UWheeledVehicleMovementComponentTank), 0x0020080000002000);
				UProperty* NewProp_SteeringLeftInput = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SteeringLeftInput"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SteeringLeftInput, UWheeledVehicleMovementComponentTank), 0x0020080000002000);
				UProperty* NewProp_AckermannAccuracy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AckermannAccuracy"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AckermannAccuracy, UWheeledVehicleMovementComponentTank), 0x0010040000000001);
				UProperty* NewProp_SteeringCurve = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SteeringCurve"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SteeringCurve, UWheeledVehicleMovementComponentTank), 0x0010000000000001, Z_Construct_UScriptStruct_FRuntimeFloatCurve());
				UProperty* NewProp_TransmissionSetup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TransmissionSetup"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TransmissionSetup, UWheeledVehicleMovementComponentTank), 0x0010000000000001, Z_Construct_UScriptStruct_FTankTransmissionData());
				UProperty* NewProp_EngineSetup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EngineSetup"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(EngineSetup, UWheeledVehicleMovementComponentTank), 0x0010000000000001, Z_Construct_UScriptStruct_FTankEngineData());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_ServerUpdateTankState(), "ServerUpdateTankState"); // 2123062712
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetBrakeLeftInput(), "SetBrakeLeftInput"); // 4034748673
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetBrakeRightInput(), "SetBrakeRightInput"); // 160165828
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetSteeringLeftInput(), "SetSteeringLeftInput"); // 1286649152
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UWheeledVehicleMovementComponentTank_SetSteeringRightInput(), "SetSteeringRightInput"); // 697155125
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("PlanarMovement Components|Movement|Planar Activation Components|Activation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_NumRollers, TEXT("Category"), TEXT("TankSetup"));
				MetaData->SetValue(NewProp_NumRollers, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_NumRollers, TEXT("ToolTip"), TEXT("Used For Number Of Wheel Bones *"));
				MetaData->SetValue(NewProp_RepTankState, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_RepTankState, TEXT("ToolTip"), TEXT("Replicates state of tank input"));
				MetaData->SetValue(NewProp_BrakeRightRate, TEXT("Category"), TEXT("VehicleInput"));
				MetaData->SetValue(NewProp_BrakeRightRate, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_BrakeRightRate, TEXT("ToolTip"), TEXT("Rate at which input brake can for right caterpillar rise and fall"));
				MetaData->SetValue(NewProp_BrakeLeftRate, TEXT("Category"), TEXT("VehicleInput"));
				MetaData->SetValue(NewProp_BrakeLeftRate, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_BrakeLeftRate, TEXT("ToolTip"), TEXT("Rate at which input brake for left caterpillar can rise and fall"));
				MetaData->SetValue(NewProp_SteeringRightRate, TEXT("Category"), TEXT("VehicleInput"));
				MetaData->SetValue(NewProp_SteeringRightRate, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_SteeringRightRate, TEXT("ToolTip"), TEXT("Rate at which input for right caterpillar can rise and fall"));
				MetaData->SetValue(NewProp_SteeringLeftRate, TEXT("Category"), TEXT("VehicleInput"));
				MetaData->SetValue(NewProp_SteeringLeftRate, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_SteeringLeftRate, TEXT("ToolTip"), TEXT("Rate at which input for left caterpillar can rise and fall"));
				MetaData->SetValue(NewProp_IdleBrakeInputRight, TEXT("Category"), TEXT("VehicleInput"));
				MetaData->SetValue(NewProp_IdleBrakeInputRight, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_IdleBrakeInputRight, TEXT("ToolTip"), TEXT("How much to press the brake when the player has release throttle"));
				MetaData->SetValue(NewProp_IdleBrakeInputLeft, TEXT("Category"), TEXT("VehicleInput"));
				MetaData->SetValue(NewProp_IdleBrakeInputLeft, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_IdleBrakeInputLeft, TEXT("ToolTip"), TEXT("How much to press the brake when the player has release throttle"));
				MetaData->SetValue(NewProp_bRawBrakeLeftInput, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_bRawBrakeLeftInput, TEXT("ToolTip"), TEXT("True if the player is holding the brake."));
				MetaData->SetValue(NewProp_bRawBrakeRightInput, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_bRawBrakeRightInput, TEXT("ToolTip"), TEXT("True if the player is holding the brake."));
				MetaData->SetValue(NewProp_RawSteeringRightInput, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_RawSteeringRightInput, TEXT("ToolTip"), TEXT("What the player has the steering set to. Range -1...1"));
				MetaData->SetValue(NewProp_RawSteeringLeftInput, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_RawSteeringLeftInput, TEXT("ToolTip"), TEXT("What the player has the steering set to. Range -1...1"));
				MetaData->SetValue(NewProp_BrakeRightInput, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_BrakeRightInput, TEXT("ToolTip"), TEXT("Right brake caterpillar input."));
				MetaData->SetValue(NewProp_BrakeLeftInput, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_BrakeLeftInput, TEXT("ToolTip"), TEXT("Left brake caterpillar input."));
				MetaData->SetValue(NewProp_SteeringRightInput, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_SteeringRightInput, TEXT("ToolTip"), TEXT("Right throttle caterpillar input."));
				MetaData->SetValue(NewProp_SteeringLeftInput, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_SteeringLeftInput, TEXT("ToolTip"), TEXT("Left throttle caterpillar input."));
				MetaData->SetValue(NewProp_AckermannAccuracy, TEXT("Category"), TEXT("SteeringSetup"));
				MetaData->SetValue(NewProp_AckermannAccuracy, TEXT("ClampMax"), TEXT("1.0"));
				MetaData->SetValue(NewProp_AckermannAccuracy, TEXT("ClampMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_AckermannAccuracy, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_AckermannAccuracy, TEXT("ToolTip"), TEXT("Accuracy of Ackermann steer calculation (range: 0..1)"));
				MetaData->SetValue(NewProp_AckermannAccuracy, TEXT("UIMax"), TEXT("1.0"));
				MetaData->SetValue(NewProp_AckermannAccuracy, TEXT("UIMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_SteeringCurve, TEXT("Category"), TEXT("SteeringSetup"));
				MetaData->SetValue(NewProp_SteeringCurve, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_SteeringCurve, TEXT("ToolTip"), TEXT("Transmission data"));
				MetaData->SetValue(NewProp_TransmissionSetup, TEXT("Category"), TEXT("MechanicalSetup"));
				MetaData->SetValue(NewProp_TransmissionSetup, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_TransmissionSetup, TEXT("ToolTip"), TEXT("Differential"));
				MetaData->SetValue(NewProp_EngineSetup, TEXT("Category"), TEXT("MechanicalSetup"));
				MetaData->SetValue(NewProp_EngineSetup, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponentTank.h"));
				MetaData->SetValue(NewProp_EngineSetup, TEXT("ToolTip"), TEXT("Engine"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UWheeledVehicleMovementComponentTank(Z_Construct_UClass_UWheeledVehicleMovementComponentTank, &UWheeledVehicleMovementComponentTank::StaticClass, TEXT("UWheeledVehicleMovementComponentTank"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UWheeledVehicleMovementComponentTank);
	UClass* Z_Construct_UClass_ATankVehicle_NoRegister()
	{
		return ATankVehicle::StaticClass();
	}
	UClass* Z_Construct_UClass_ATankVehicle()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AWheeledVehicle();
			Z_Construct_UPackage__Script_VehiclesPlugin();
			OuterClass = ATankVehicle::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TankVehicle.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/TankVehicle.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ATankVehicle(Z_Construct_UClass_ATankVehicle, &ATankVehicle::StaticClass, TEXT("ATankVehicle"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ATankVehicle);
	UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent10W_NoRegister()
	{
		return UWheeledVehicleMovementComponent10W::StaticClass();
	}
	UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent10W()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UWheeledVehicleMovementComponent4W();
			Z_Construct_UPackage__Script_VehiclesPlugin();
			OuterClass = UWheeledVehicleMovementComponent10W::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("PlanarMovement Components|Movement|Planar Activation Components|Activation PlanarMovement Components|Movement|Planar Activation Components|Activation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WheeledVehicleMovementComponent10W.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponent10W.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UWheeledVehicleMovementComponent10W(Z_Construct_UClass_UWheeledVehicleMovementComponent10W, &UWheeledVehicleMovementComponent10W::StaticClass, TEXT("UWheeledVehicleMovementComponent10W"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UWheeledVehicleMovementComponent10W);
	UClass* Z_Construct_UClass_AWheeledVehicle10W_NoRegister()
	{
		return AWheeledVehicle10W::StaticClass();
	}
	UClass* Z_Construct_UClass_AWheeledVehicle10W()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AWheeledVehicle();
			Z_Construct_UPackage__Script_VehiclesPlugin();
			OuterClass = AWheeledVehicle10W::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WheeledVehicle10W.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicle10W.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AWheeledVehicle10W(Z_Construct_UClass_AWheeledVehicle10W, &AWheeledVehicle10W::StaticClass, TEXT("AWheeledVehicle10W"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AWheeledVehicle10W);
	UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent12W_NoRegister()
	{
		return UWheeledVehicleMovementComponent12W::StaticClass();
	}
	UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent12W()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UWheeledVehicleMovementComponent4W();
			Z_Construct_UPackage__Script_VehiclesPlugin();
			OuterClass = UWheeledVehicleMovementComponent12W::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("PlanarMovement Components|Movement|Planar Activation Components|Activation PlanarMovement Components|Movement|Planar Activation Components|Activation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WheeledVehicleMovementComponent12W.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponent12W.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UWheeledVehicleMovementComponent12W(Z_Construct_UClass_UWheeledVehicleMovementComponent12W, &UWheeledVehicleMovementComponent12W::StaticClass, TEXT("UWheeledVehicleMovementComponent12W"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UWheeledVehicleMovementComponent12W);
	UClass* Z_Construct_UClass_AWheeledVehicle12W_NoRegister()
	{
		return AWheeledVehicle12W::StaticClass();
	}
	UClass* Z_Construct_UClass_AWheeledVehicle12W()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AWheeledVehicle();
			Z_Construct_UPackage__Script_VehiclesPlugin();
			OuterClass = AWheeledVehicle12W::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WheeledVehicle12W.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicle12W.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AWheeledVehicle12W(Z_Construct_UClass_AWheeledVehicle12W, &AWheeledVehicle12W::StaticClass, TEXT("AWheeledVehicle12W"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AWheeledVehicle12W);
	UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent14W_NoRegister()
	{
		return UWheeledVehicleMovementComponent14W::StaticClass();
	}
	UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent14W()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UWheeledVehicleMovementComponent4W();
			Z_Construct_UPackage__Script_VehiclesPlugin();
			OuterClass = UWheeledVehicleMovementComponent14W::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("PlanarMovement Components|Movement|Planar Activation Components|Activation PlanarMovement Components|Movement|Planar Activation Components|Activation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WheeledVehicleMovementComponent14W.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponent14W.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UWheeledVehicleMovementComponent14W(Z_Construct_UClass_UWheeledVehicleMovementComponent14W, &UWheeledVehicleMovementComponent14W::StaticClass, TEXT("UWheeledVehicleMovementComponent14W"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UWheeledVehicleMovementComponent14W);
	UClass* Z_Construct_UClass_AWheeledVehicle14W_NoRegister()
	{
		return AWheeledVehicle14W::StaticClass();
	}
	UClass* Z_Construct_UClass_AWheeledVehicle14W()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AWheeledVehicle();
			Z_Construct_UPackage__Script_VehiclesPlugin();
			OuterClass = AWheeledVehicle14W::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WheeledVehicle14W.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicle14W.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AWheeledVehicle14W(Z_Construct_UClass_AWheeledVehicle14W, &AWheeledVehicle14W::StaticClass, TEXT("AWheeledVehicle14W"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AWheeledVehicle14W);
	UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent16W_NoRegister()
	{
		return UWheeledVehicleMovementComponent16W::StaticClass();
	}
	UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent16W()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UWheeledVehicleMovementComponent4W();
			Z_Construct_UPackage__Script_VehiclesPlugin();
			OuterClass = UWheeledVehicleMovementComponent16W::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("PlanarMovement Components|Movement|Planar Activation Components|Activation PlanarMovement Components|Movement|Planar Activation Components|Activation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WheeledVehicleMovementComponent16W.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponent16W.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UWheeledVehicleMovementComponent16W(Z_Construct_UClass_UWheeledVehicleMovementComponent16W, &UWheeledVehicleMovementComponent16W::StaticClass, TEXT("UWheeledVehicleMovementComponent16W"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UWheeledVehicleMovementComponent16W);
	UClass* Z_Construct_UClass_AWheeledVehicle16W_NoRegister()
	{
		return AWheeledVehicle16W::StaticClass();
	}
	UClass* Z_Construct_UClass_AWheeledVehicle16W()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AWheeledVehicle();
			Z_Construct_UPackage__Script_VehiclesPlugin();
			OuterClass = AWheeledVehicle16W::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WheeledVehicle16W.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicle16W.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AWheeledVehicle16W(Z_Construct_UClass_AWheeledVehicle16W, &AWheeledVehicle16W::StaticClass, TEXT("AWheeledVehicle16W"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AWheeledVehicle16W);
	UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent6W_NoRegister()
	{
		return UWheeledVehicleMovementComponent6W::StaticClass();
	}
	UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent6W()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UWheeledVehicleMovementComponent4W();
			Z_Construct_UPackage__Script_VehiclesPlugin();
			OuterClass = UWheeledVehicleMovementComponent6W::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("PlanarMovement Components|Movement|Planar Activation Components|Activation PlanarMovement Components|Movement|Planar Activation Components|Activation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WheeledVehicleMovementComponent6W.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponent6W.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UWheeledVehicleMovementComponent6W(Z_Construct_UClass_UWheeledVehicleMovementComponent6W, &UWheeledVehicleMovementComponent6W::StaticClass, TEXT("UWheeledVehicleMovementComponent6W"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UWheeledVehicleMovementComponent6W);
	UClass* Z_Construct_UClass_AWheeledVehicle6W_NoRegister()
	{
		return AWheeledVehicle6W::StaticClass();
	}
	UClass* Z_Construct_UClass_AWheeledVehicle6W()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AWheeledVehicle();
			Z_Construct_UPackage__Script_VehiclesPlugin();
			OuterClass = AWheeledVehicle6W::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WheeledVehicle6W.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicle6W.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AWheeledVehicle6W(Z_Construct_UClass_AWheeledVehicle6W, &AWheeledVehicle6W::StaticClass, TEXT("AWheeledVehicle6W"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AWheeledVehicle6W);
	UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent8W_NoRegister()
	{
		return UWheeledVehicleMovementComponent8W::StaticClass();
	}
	UClass* Z_Construct_UClass_UWheeledVehicleMovementComponent8W()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UWheeledVehicleMovementComponent4W();
			Z_Construct_UPackage__Script_VehiclesPlugin();
			OuterClass = UWheeledVehicleMovementComponent8W::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("PlanarMovement Components|Movement|Planar Activation Components|Activation PlanarMovement Components|Movement|Planar Activation Components|Activation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WheeledVehicleMovementComponent8W.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicleMovementComponent8W.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UWheeledVehicleMovementComponent8W(Z_Construct_UClass_UWheeledVehicleMovementComponent8W, &UWheeledVehicleMovementComponent8W::StaticClass, TEXT("UWheeledVehicleMovementComponent8W"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UWheeledVehicleMovementComponent8W);
	UClass* Z_Construct_UClass_AWheeledVehicle8W_NoRegister()
	{
		return AWheeledVehicle8W::StaticClass();
	}
	UClass* Z_Construct_UClass_AWheeledVehicle8W()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AWheeledVehicle();
			Z_Construct_UPackage__Script_VehiclesPlugin();
			OuterClass = AWheeledVehicle8W::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WheeledVehicle8W.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/WheeledVehicle8W.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AWheeledVehicle8W(Z_Construct_UClass_AWheeledVehicle8W, &AWheeledVehicle8W::StaticClass, TEXT("AWheeledVehicle8W"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AWheeledVehicle8W);
	UPackage* Z_Construct_UPackage__Script_VehiclesPlugin()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/VehiclesPlugin")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x82EB6A39;
			Guid.B = 0x850BDB1B;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
